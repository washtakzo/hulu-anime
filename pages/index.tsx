import Head from "next/head";
import React from "react";
import AnimeCard from "../components/AnimeCard";
import Header from "../components/Header";
import { useSelector } from "react-redux";
import Footer from "../components/Footer";
import useFetchAnimes from "../hooks/useFetchAnimes";

const animeGridContainerClass = `grid py-8 grid-cols-2 md:grid-cols-3 lg:grid-cols-4 
xl:grid-cols-5 2xl:grid-cols-6 3xl:grid-cols-7 gap-4  
w-[360px] sm:w-[440px] md:w-[660px] lg:w-[860px] xl:w-[1080px] 
2xl:w-[1300px] 3xl:w-[1400px] m-auto`;

export default function Home() {
  const { isLoading, animes, error } = useFetchAnimes();
  console.log({ isLoading });

  return (
    <>
      <Head>
        <title>Hulu Anime</title>
        <meta name="Hulu Anime" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="bg-[#0D1C23]">
        {!isLoading && error && (
          <>
            <h2 className=" text-center text-xl mt-20 font-semibold ">
              The following error occured :
              <br />
              <br />
              <span className="text-red-400">[{error.message}]</span>
              <br />
              <br />
              please try again later
            </h2>
            <div className={animeGridContainerClass}>
              {Array(12)
                .fill(0)
                .map((el) => (
                  <AnimeCard
                    key={Math.random()}
                    anime={null}
                    isFetching={true}
                  />
                ))}
            </div>
          </>
        )}
        <div className={animeGridContainerClass}>
          {isLoading &&
            Array(24)
              .fill(0)
              .map((_) => (
                <AnimeCard key={Math.random()} anime={null} isFetching={true} />
              ))}
          {!isLoading &&
            !error &&
            animes.map((anime) => (
              <AnimeCard key={Math.random()} anime={anime} isFetching={false} />
            ))}
        </div>
      </main>

      <Footer />
    </>
  );
}

// export async function getServerSideProps() {
//   const animes = await getAnimeQuery.getTrendingAnime();
//   return {
//     props: {
//       animes,
//     },
//   };
// }
